variables:
  DOCKER_DRIVER: overlay2
  GRADLE_OPTS:
    value: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true -Dorg.gradle.project.reckon.enabled=true
    description: "Common Gradle options"
  DEFAULT_JOB_IMAGE_NAME:
    value: eclipse-temurin:17-jdk-alpine

include:
    # Include some default job templates for various job types
    - project: 'codebreeze-io/project-template/gitlab-template'
      ref: '0.4'
      file:
        - 'gradle/micro-stageless-pipeline.gitlab-ci.yml'
        - 'rule/deliver-job-auto-tag-rule.gitlab-ci.yml'
        - 'workflow/mergerequest-then-branch-or-tag-workflow.gitlab-ci.yml'
        # Add the release feature for this pipeline
        - 'release/release-micro-stageless-pipeline.gitlab-ci.yml'

check:
    variables:
        POSTGRESQL_USERNAME: spring
        POSTGRESQL_PASSWORD: boot
        POSTGRESQL_DATABASE: app
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql/app
        SPRING_DATASOURCE_USERNAME: spring
        SPRING_DATASOURCE_PASSWORD: boot
        SPRING_JPA_GENERATE_DDL: "true"
    services:
        - name: bitnami/postgresql:11
          alias: postgresql

deliver:
    services:
        - docker:19-dind


deploy:
    extends: .default-job
    image: hashicorp/levant:0.3.0
    needs:
        - job: deliver
          artifacts: false # artifacts are pushed to registry and will be pulled by nomad
    tags:
        - nomad-cluster
    cache: []
    script:
        - |
          levant render -var-file src/main/nomad/levant.yml src/main/nomad/continuousdelivery.hcl
  # TODO provide delivery rules as template in codebreeze-io/project-template/gitlab-gradle-template
    rules:
      # Always deliver a tagged build
      - if: '$CI_COMMIT_TAG'
        when: on_success # the default
      # Manually deliver a feature branch build
      - if: '$CI_COMMIT_BRANCH =~ /feature\/.*/'
        when: manual
      # Manually deliver a merge request build
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        when: manual
