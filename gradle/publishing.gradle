apply plugin: 'maven-publish'

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
        project.plugins.withId('org.graalvm.buildtools.native') {
            org.gradle.internal.os.OperatingSystem os = org.gradle.internal.os.OperatingSystem.current()
            def nativeCompileTask = tasks.named('nativeCompile').get()
            def nativeArtifact = artifacts.add('archives',
                    nativeCompileTask.outputDirectory.file(nativeCompileTask.executableName.get()).get().asFile) {
                builtBy tasks.named('nativeCompile')
                type 'native'
                classifier "${os.name.replace('Mac OS X', 'darwin')}_${System.getProperty('os.arch').replace('x86_64', 'amd64')}"
            }

            bootNative(MavenPublication) {
                artifact nativeArtifact
                groupId = project.group
                artifactId = project.name
                version = project.version
            }
        }
    }

    repositories {
        maven {
            url "https://gitlab.com/api/v4/projects/${System.getenv('CI_PROJECT_ID')}/packages/maven"
            name "GitLab"
            credentials(HttpHeaderCredentials) {
                name = 'Job-Token'
                value = System.getenv("CI_JOB_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

tasks.register('deliver') {
    group = 'Pipeline facade'
    description 'Run all tasks for publishing (delivering) all produced artifacts'
    dependsOn tasks.named('publishAllPublicationsToGitLabRepository')
}

project.plugins.withId('org.springframework.boot') {
    tasks.named('deliver').configure {
        dependsOn tasks.named('bootBuildImage')
    }
}