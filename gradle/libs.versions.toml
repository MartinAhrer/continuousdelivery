[versions]
asm = "9.3"

bytebuddy = "1.12.+"

cyclondx = "1.4.1"

groovy = "4.0.11"

h2database = "2.1.214"

jpaApi = "3.1.0"
jupiter = "5.9.0"

lombok = '1.18.26'
logback = '1.2.11'
logstash = '7.2'

objenesis = "3.3"

postgresql = "42.4.1"

spock = "2.3-groovy-4.0" # keep aligned with groovyMinorVersion

# plugins
asciidoctorJvmConvert = "3.3.2"

benmanesVersions = "0.42.0"
bintray = "1.8.5"

graalvmBuildtoolsNative = "0.9.20"

grgit = "5.0.0"

jib = "3.2.1"

reckon = "0.16.1"

springBoot = "3.0.5"

[libraries]

asm = { module = "org.ow2.asm:asm", version.ref = "asm" }

bytebuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }

groovy-bom = { module = "org.apache.groovy:groovy-bom", version.ref = "groovy" }
groovy = { module = "org.apache.groovy:groovy" }
groovy-json = { module = "org.apache.groovy:groovy-json" }


hamcrest-library = { module = "org.hamcrest:hamcrest-library" }
h2database = { module = "com.h2database:h2", version.ref = "h2database" }

jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j" }
jpa-api = { module = "jakarta.persistence:jakarta.persistence-api" }

json-path = { module = "com.jayway.jsonpath:json-path" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jupiter" }

logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

objenesis = { module = "org.objenesis:objenesis", version.ref = "objenesis" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

spock-bom = { module = "org.spockframework:spock-bom", version.ref = "spock" }
spock = { module = "org.spockframework:spock-core" }
spock-spring = { module = "org.spockframework:spock-spring" }

spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-data-rest = { module = "org.springframework.boot:spring-boot-starter-data-rest" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-hateoas = { module = "org.springframework.boot:spring-boot-starter-hateoas" }
spring-boot-starter-json = { module = "org.springframework.boot:spring-boot-starter-json" }
spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test" }

spring-data-rest-hal-explorer = { module = "org.springframework.data:spring-data-rest-hal-explorer" }
spring-data-rest-webmvc = { module = "org.springframework.data:spring-data-rest-webmvc" }
spring-test = { module = "org.springframework:spring-test" }
spring-restdocs-asciidoctor = { module = "org.springframework.restdocs:spring-restdocs-asciidoctor" }
spring-restdocs-mockmvc = { module = "org.springframework.restdocs:spring-restdocs-mockmvc" }
spring-web = { module = "org.springframework:spring-web" }


[bundles]

logback = ["logback-classic"]

spockClassMocking = ["bytebuddy", "objenesis"] # allows mocking of classes (in addition to interfaces),  allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)
spock = ["bytebuddy", "objenesis", "spock"]

[plugins]

asciidoctor-convert = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctorJvmConvert" }

benmanes-versions = { id = "com.github.ben-manes.versions", version.ref = "benmanesVersions" }
bintray = { id = "com.jfrog.bintray", version.ref = "bintray" }

cyclondx = { id = "org.cyclonedx.bom", version.ref = "cyclondx" }

graalvm-buildtools-native = { id = "org.graalvm.buildtools.native", version.ref = "graalvmBuildtoolsNative" }

git-properties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.1" }
grgit = { id = "org.ajoberstar.grgit", version.ref = "grgit" }

hibernate = { id = "org.hibernate.orm", version = "6.1.6.Final" }

jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }

reckon = { id = "org.ajoberstar.reckon", version.ref = "reckon" }

spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
