buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

plugins {
    id 'org.ajoberstar.release-opinion' version '1.4.2'
    id "net.ltgt.apt" version "0.6"

    id "org.asciidoctor.convert" version "1.5.2"

    id 'org.unbroken-dome.test-sets' version '1.2.0'
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'groovy'

apply plugin: 'idea'

repositories {
    mavenCentral()
}

group 'at.martinahrer'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

ext {
    spockVersion = '1.0-groovy-2.4'
    groovyVersion = '2.4.5'
    lombokVersion = '1.16.8'
}


testSets {
    sharedTest
    integrationTest
    docsTest { dirName = 'docs'}
}

dependencies {
    apt "org.projectlombok:lombok:$lombokVersion"

    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-hateoas")

    compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final")
    compile("org.projectlombok:lombok:$lombokVersion")

    runtime ('org.springframework.data:spring-data-rest-hal-browser')
    runtime ("com.h2database:h2:1.4.191")

    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
    testCompile("org.springframework:spring-test")
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.spockframework:spock-spring:$spockVersion"

    docsTestCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.0.1.RELEASE'
    docsTestCompile 'com.jayway.jsonpath:json-path'
    docsTestCompile 'org.hamcrest:hamcrest-library'

    docsTestCompile sourceSets.sharedTest.output
    integrationTestCompile sourceSets.sharedTest.output
}


ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn docsTest
}

// check: is it still required with ltgt
idea {
    project {
        ipr {
            withXml { provider ->
                // Get XML as groovy.util.Node to work with.
                def projectXml = provider.asNode()

                // Find compiler configuration component.
                def compilerConfiguration = projectXml.component.find { component ->
                    component.'@name' == 'CompilerConfiguration'
                }

                // Replace current annotationProcessing
                // that is part of the compiler configuration.
                def currentAnnotationProcessing = compilerConfiguration.annotationProcessing
                currentAnnotationProcessing.replaceNode {
                    annotationProcessing {
                        profile(name: 'Default', default: true, enabled: true) {
                            processorPath(useClasspath: true)
                        }
                    }
                }
            }
        }
    }
}

build.dependsOn asciidoctor
build.dependsOn integrationTest